src/main/java/com/your/package/modid/
├──entites
│  ├──model
│  │  └──BuffaloModel.java*
│  ├──render
│  │  └──BuffaloRenderer.java*
│  ├──BuffaloEntity.java*
│  └──ModEntityTypes.java*
│
├──util
│  └──Registration.java*
│
├──setup
│  └──ClientProxy.java*
│
└──CopperModMAIN.java*
 
scr/main/resources/assets/modid/
├──textures
│  └──entity
│     └──buffalo.png
  
Files marked with * must be created or changed. Code that is written are things to be ADDED. If something is to be replaced a comment is made! 

BuffaloModel.java

package com.kaupenjoe.coppermod.entities.model;

import com.kaupenjoe.coppermod.entities.BuffaloEntity;
import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import net.minecraft.client.renderer.entity.model.EntityModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.util.math.MathHelper;

public class BuffaloModel<T extends BuffaloEntity> extends EntityModel<T>
{
    private final ModelRenderer head;
    private final ModelRenderer body;
    private final ModelRenderer legFrontRight;
    private final ModelRenderer legFrontLeft;
    private final ModelRenderer legBackRight;
    private final ModelRenderer legBackLeft;

    public BuffaloModel() {
        textureWidth = 71;
        textureHeight = 45;

        head = new ModelRenderer(this);
        head.setRotationPoint(0.0F, 3.0F, -4.0F);
        head.setTextureOffset(1, 2).addBox(-3.0F, -4.0F, -6.0F, 6.0F, 6.0F, 6.0F, 0.0F, false);
        head.setTextureOffset(26, 3).addBox(3.0F, -6.0F, -3.0F, 1.0F, 3.0F, 1.0F, 0.0F, false);
        head.setTextureOffset(26, 2).addBox(-4.0F, -6.0F, -3.0F, 1.0F, 3.0F, 1.0F, 0.0F, false);

        body = new ModelRenderer(this);
        body.setRotationPoint(0.0F, 7.5F, 1.5F);
        body.setTextureOffset(0, 28).addBox(-5.0F, -7.5F, -5.5F, 10.0F, 7.0F, 10.0F, 0.0F, false);
        body.setTextureOffset(30, 10).addBox(-4.0F, -5.5F, -4.5F, 8.0F, 12.0F, 8.0F, 0.0F, false);
        setRotationAngle(body, -1.5708F, 0.0F, 0.0F);

        legFrontRight = new ModelRenderer(this);
        legFrontRight.setRotationPoint(-3.0F, 12.5F, -4.0F);
        legFrontRight.setTextureOffset(63, 32).addBox(-1.0F, -0.5F, -1.0F, 2.0F, 11.0F, 2.0F, 0.0F, false);

        legFrontLeft = new ModelRenderer(this);
        legFrontLeft.setRotationPoint(3.0F, 12.5F, -4.0F);
        legFrontLeft.setTextureOffset(63, 32).addBox(-1.0F, -0.5F, -1.0F, 2.0F, 11.0F, 2.0F, 0.0F, false);

        legBackRight = new ModelRenderer(this);
        legBackRight.setRotationPoint(-3.0F, 12.5F, 7.0F);
        legBackRight.setTextureOffset(63, 32).addBox(-1.0F, -0.5F, -1.0F, 2.0F, 11.0F, 2.0F, 0.0F, false);

        legBackLeft = new ModelRenderer(this);
        legBackLeft.setRotationPoint(3.0F, 12.5F, 7.0F);
        legBackLeft.setTextureOffset(63, 32).addBox(-1.0F, -0.5F, -1.0F, 2.0F, 11.0F, 2.0F, 0.0F, false);
    }

    @Override
    public void setRotationAngles(T entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch)
    {
        this.head.rotateAngleX = headPitch * ((float)Math.PI / 180F);
        this.head.rotateAngleY = netHeadYaw * ((float)Math.PI / 180F);
        this.body.rotateAngleX = ((float)Math.PI / 2F);
        this.legBackRight.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount;
        this.legBackLeft.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount;
        this.legFrontRight.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount;
        this.legFrontLeft.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount;
    }


    @Override
    public void render(MatrixStack matrixStack, IVertexBuilder buffer, int packedLight, int packedOverlay, float red, float green, float blue, float alpha){
        head.render(matrixStack, buffer, packedLight, packedOverlay);
        body.render(matrixStack, buffer, packedLight, packedOverlay);
        legFrontRight.render(matrixStack, buffer, packedLight, packedOverlay);
        legFrontLeft.render(matrixStack, buffer, packedLight, packedOverlay);
        legBackRight.render(matrixStack, buffer, packedLight, packedOverlay);
        legBackLeft.render(matrixStack, buffer, packedLight, packedOverlay);
    }

    public void setRotationAngle(ModelRenderer modelRenderer, float x, float y, float z) {
        modelRenderer.rotateAngleX = x;
        modelRenderer.rotateAngleY = y;
        modelRenderer.rotateAngleZ = z;
    }
}


BuffaloRenderer:

package com.kaupenjoe.coppermod.entities.render;

import com.kaupenjoe.coppermod.CopperModMAIN;
import com.kaupenjoe.coppermod.entities.BuffaloEntity;
import com.kaupenjoe.coppermod.entities.model.BuffaloModel;
import net.minecraft.client.renderer.entity.EntityRendererManager;
import net.minecraft.client.renderer.entity.MobRenderer;
import net.minecraft.util.ResourceLocation;

public class BuffaloRenderer extends MobRenderer<BuffaloEntity, BuffaloModel<BuffaloEntity>>
{
    protected static final ResourceLocation TEXTURE = new ResourceLocation(CopperModMAIN.MOD_ID,
            "textures/entity/buffalo.png");

    public BuffaloRenderer(EntityRendererManager renderManagerIn)
    {
        super(renderManagerIn, new BuffaloModel<>(), 0.9f);
    }

    @Override
    public ResourceLocation getEntityTexture(BuffaloEntity entity)
    {
        return TEXTURE;
    }
}


BuffaloEntity:

package com.kaupenjoe.coppermod.entities;

import com.kaupenjoe.coppermod.item.ModItems;
import net.minecraft.block.BlockState;
import net.minecraft.entity.*;
import net.minecraft.entity.ai.attributes.AttributeModifierMap;
import net.minecraft.entity.ai.attributes.Attributes;
import net.minecraft.entity.ai.goal.*;
import net.minecraft.entity.passive.AnimalEntity;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.item.crafting.Ingredient;
import net.minecraft.util.DamageSource;
import net.minecraft.util.SoundEvent;
import net.minecraft.util.SoundEvents;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;
import net.minecraft.world.server.ServerWorld;
import org.jetbrains.annotations.Nullable;

public class BuffaloEntity extends AnimalEntity
{
    protected BuffaloEntity(EntityType<? extends AnimalEntity> type, World worldIn)
    {
        super(type, worldIn);
    }

    public static AttributeModifierMap.MutableAttribute setCustomAttribute()
    {
        return MobEntity.func_233666_p_()
                .createMutableAttribute(Attributes.MAX_HEALTH, 18.0D)
                .createMutableAttribute(Attributes.MOVEMENT_SPEED, 0.35D);
    }

    @Override
    protected int getExperiencePoints(PlayerEntity player)
    {
        return 1 + this.world.rand.nextInt(6); // between 1 and 7
    }

    @Override
    protected SoundEvent getAmbientSound()
    {
        return SoundEvents.ENTITY_COW_AMBIENT;
    }

    @Override
    protected SoundEvent getDeathSound()
    {
        return SoundEvents.ENTITY_COW_DEATH;
    }

    @Override
    protected SoundEvent getHurtSound(DamageSource source)
    {
        return SoundEvents.ENTITY_COW_HURT;
    }

    @Override
    protected void playStepSound(BlockPos pos, BlockState blockIn)
    {
        this.playSound(SoundEvents.ENTITY_COW_STEP, 0.75f, 0.25f);
    }

    @Override
    protected void registerGoals()
    {
        super.registerGoals();
        this.goalSelector.addGoal(0, new SwimGoal(this));
        this.goalSelector.addGoal(1, new BreedGoal(this, 1.0D));
        this.goalSelector.addGoal(2, new TemptGoal(this, 1.25D,
                Ingredient.fromItems(ModItems.COPPER_INGOT.get()), false));
        this.goalSelector.addGoal(3, new FollowParentGoal(this, 1.1D));
        this.goalSelector.addGoal(4, new WaterAvoidingRandomWalkingGoal(this, 1.0D));
        this.goalSelector.addGoal(5, new LookAtGoal(this, PlayerEntity.class, 8f));
        this.goalSelector.addGoal(6, new LookRandomlyGoal(this));
    }

    @Nullable
    @Override
    public AgeableEntity func_241840_a(ServerWorld p_241840_1_, AgeableEntity p_241840_2_)
    {
        return ModEntityTypes.BUFFALO.get().create(this.world);
    }
}


ModEntityTypes:

package com.kaupenjoe.coppermod.entities;

import com.kaupenjoe.coppermod.CopperModMAIN;
import com.kaupenjoe.coppermod.util.Registration;
import net.minecraft.entity.EntityClassification;
import net.minecraft.entity.EntityType;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;

public class ModEntityTypes
{

    public static final RegistryObject<EntityType<BuffaloEntity>> BUFFALO = Registration.ENTITY_TYPES.register("buffalo",
            () -> EntityType.Builder.create(BuffaloEntity::new, EntityClassification.CREATURE)
                    .size(1.5f, 1.5f)
                    .build(new ResourceLocation(CopperModMAIN.MOD_ID + "buffalo").toString()));

    public static void register() { }

}


CopperModMAIN:

Add this in the setup() Method:

	DeferredWorkQueue.runLater(() -> {
		GlobalEntityTypeAttributes.put(ModEntityTypes.BUFFALO.get(), BuffaloEntity.setCustomAttribute().create());
	});

Add this in the registerModAdditions() Method:

	ModEntityTypes.register();


Registration:

    public static DeferredRegister<EntityType<?>> ENTITY_TYPES
            = DeferredRegister.create(ForgeRegistries.ENTITIES, CopperModMAIN.MOD_ID);
			
Add to the init() Method:
			
	ENTITY_TYPES.register(eventBus);


en_us.json:

  "entity.coppermod.buffalo": "Buffalo"

