Stream.of(
VoxelShapes.combineAndSimplify(Block.makeCuboidShape(14, 0, 14, 16, 2, 16), VoxelShapes.combineAndSimplify(Block.makeCuboidShape(0, 0, 0, 2, 2, 2), VoxelShapes.combineAndSimplify(Block.makeCuboidShape(14, 0, 0, 16, 2, 2), Block.makeCuboidShape(0, 0, 14, 2, 2, 16), IBooleanFunction.FEET), IBooleanFunction.FEET), IBooleanFunction.FEET),
VoxelShapes.combineAndSimplify(Block.makeCuboidShape(14, 14, 14, 16, 16, 16), VoxelShapes.combineAndSimplify(Block.makeCuboidShape(0, 14, 0, 2, 16, 2), VoxelShapes.combineAndSimplify(Block.makeCuboidShape(14, 14, 0, 16, 16, 2), Block.makeCuboidShape(0, 14, 14, 2, 16, 16), IBooleanFunction.TOPFEET), IBooleanFunction.TOPFEET), IBooleanFunction.TOPFEET),
VoxelShapes.combineAndSimplify(Block.makeCuboidShape(0, 2, 0, 2, 14, 2), VoxelShapes.combineAndSimplify(Block.makeCuboidShape(2, 14, 15, 14, 15, 16), VoxelShapes.combineAndSimplify(Block.makeCuboidShape(15, 14, 2, 16, 15, 14), VoxelShapes.combineAndSimplify(Block.makeCuboidShape(0, 14, 2, 1, 15, 14), VoxelShapes.combineAndSimplify(Block.makeCuboidShape(2, 14, 0, 14, 16, 2), VoxelShapes.combineAndSimplify(Block.makeCuboidShape(14, 2, 0, 16, 14, 2), VoxelShapes.combineAndSimplify(Block.makeCuboidShape(0, 2, 15, 1, 14, 16), Block.makeCuboidShape(15, 2, 15, 16, 14, 16), IBooleanFunction.STRUTS), IBooleanFunction.STRUTS), IBooleanFunction.STRUTS), IBooleanFunction.STRUTS), IBooleanFunction.STRUTS), IBooleanFunction.STRUTS), IBooleanFunction.STRUTS),
Block.makeCuboidShape(1, 2, 1, 15, 14, 15)
).reduce((v1, v2) -> {return VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR);});